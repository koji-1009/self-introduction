{"version":3,"sources":["withRoot.tsx","components/DemoComponent.tsx","components/WorksComponent.tsx","App.tsx","serviceWorker.ts","index.tsx","logo.svg"],"names":["theme","createMuiTheme","palette","primary","indigo","secondary","lightGreen","withRoot","Component","props","react","MuiThemeProvider","CssBaseline","DemoComponent","classes","this","react_default","a","createElement","className","root","header","src","logo","alt","href","target","rel","React","withStyles","createStyles","textAlign","backgroundColor","main","boxShadow","shadows","padding","spacing","counter","fontSize","WorkComponent","App","state","open","handleDrawerOpen","_this","setState","handleDrawerClose","react_router_dom","basename","AppBar","classNames","appBar","appBarShift","Toolbar","disableGutters","toolbar","IconButton","color","aria-label","onClick","menuButton","menuButtonHidden","Menu_default","Typography","component","variant","noWrap","title","Drawer","paper","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","Divider","List","to","ListItem","button","ListItemIcon","Dashboard_default","ListItemText","ShoppingCart_default","content","appBarSpacer","react_router","path","exact","_ref","mixins","transitions","breakpoints","zIndex","display","background","default","alignItems","justifyContent","drawer","transition","create","easing","sharp","duration","leavingScreen","marginLeft","width","concat","enteringScreen","marginRight","flexGrow","position","whiteSpace","Object","defineProperty","overflowX","up","overflow","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.4496e5d8.chunk.js","sourcesContent":["import * as React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport indigo from '@material-ui/core/colors/indigo';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst theme = createMuiTheme({\n  // Theme Colors\n  palette: {\n    primary: indigo,\n    secondary: lightGreen,\n  },\n});\n\nfunction withRoot<P>(Component: React.ComponentType<P>) {\n  function WithRoot(props: P) {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <Component {...props} />\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;","import React from \"react\";\n\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\nimport withStyles, { WithStyles, StyleRules } from \"@material-ui/core/styles/withStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\n\nimport logo from '../logo.svg';\n\nconst styles = (theme: Theme): StyleRules =>\n    createStyles({\n        root: {\n            textAlign: \"center\"\n        },\n        header: {\n            backgroundColor: theme.palette.primary.main,\n            boxShadow: theme.shadows[2],\n            padding: theme.spacing(2),\n        },\n        counter: {\n            fontSize: 60\n        },\n    });\n\ninterface DemoProps extends WithStyles<typeof styles> {\n}\n\nclass DemoComponent extends React.Component<DemoProps> {\n\n    public render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <div className={classes.header}>\n                    <p>\n                        My Demo TS Component\n                    </p>\n                </div>\n                <div>\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <p>\n                        Edit <code>src/App.tsx</code> and save to reload.\n                    </p>\n                    <a\n                        className=\"App-link\"\n                        href=\"https://reactjs.org\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        Learn React\n            </a>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(DemoComponent);\n","import React from \"react\";\n\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\nimport withStyles, { WithStyles, StyleRules } from \"@material-ui/core/styles/withStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n});\n\ninterface WorkProps extends WithStyles<typeof styles> {\n}\n\nclass WorkComponent extends React.Component<WorkProps> {\n\n    public render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <ul>\n                    <li>Play Stored Application <a href=\"https://play.google.com/store/apps/developer?id=Koji+Wakamiya&hl=ja\" target=\"_blank\" rel=\"noopener noreferrer\">Store</a>\n                        <ul>\n                            <li><a href=\"https://play.google.com/store/apps/details?id=com.app.dr1009.qrshot\" target=\"_blank\" rel=\"noopener noreferrer\">QRShot</a></li>\n                            <li><a href=\"https://play.google.com/store/apps/details?id=com.app.dr1009.dailytodo\" target=\"_blank\" rel=\"noopener noreferrer\">DailyToDo</a></li>\n                            <li><a href=\"https://play.google.com/store/apps/details?id=com.app.dr1009.addbu\" target=\"_blank\" rel=\"noopener noreferrer\">LocationViewer</a></li>\n                            <li><a href=\"https://play.google.com/store/apps/details?id=com.sf_lolitahag.kitsunehomerun\" target=\"_blank\" rel=\"noopener noreferrer\">きつねホームラン</a></li>\n                            <li><a href=\"https://play.google.com/store/apps/details?id=com.app.dr1009.webviewchecker\" target=\"_blank\" rel=\"noopener noreferrer\">WebviewChecker</a></li>\n                        </ul>\n                    </li>\n                    <li>Android Library\n                        <ul>\n                            <li><a href=\"https://github.com/koji-1009/EmptyRecyclerView\" target=\"_blank\" rel=\"noopener noreferrer\">EmptyRecyclerView</a></li>\n                            <li><a href=\"https://github.com/koji-1009/FailureStatus\" target=\"_blank\" rel=\"noopener noreferrer\">FailureStatus</a></li>\n                            <li><a href=\"https://github.com/koji-1009/ChronoDialogPreference\" target=\"_blank\" rel=\"noopener noreferrer\">ChronoDialogPreference</a></li>\n                            <li><a href=\"https://github.com/koji-1009/EasyNotificationChannel\" target=\"_blank\" rel=\"noopener noreferrer\">EasyNotificationChannel</a></li>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(WorkComponent);\n","import React from 'react';\nimport './App.css';\n\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\n\nimport classNames from \"classnames\"\n\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\nimport { withStyles, WithStyles, createStyles } from \"@material-ui/styles\";\nimport withRoot from './withRoot';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\n\nimport DemoComponent from './components/DemoComponent'\nimport WorkComponent from './components/WorksComponent'\n\nconst drawerWidth = 200;\n\nconst styles = ({ palette, spacing, mixins, transitions, breakpoints, zIndex }: Theme) => createStyles({\n  root: {\n    display: 'flex',\n    backgroundColor: palette.background.default,\n    color: palette.primary.main,\n  },\n  toolbar: {},\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n  },\n  appBar: {\n    zIndex: zIndex.drawer + 1,\n    transition: transitions.create(['width', 'margin'], {\n      easing: transitions.easing.sharp,\n      duration: transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: transitions.create(['width', 'margin'], {\n      easing: transitions.easing.sharp,\n      duration: transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: spacing(1),\n    marginRight: spacing(1),\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: transitions.create('width', {\n      easing: transitions.easing.sharp,\n      duration: transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: transitions.create('width', {\n      easing: transitions.easing.sharp,\n      duration: transitions.duration.leavingScreen,\n    }),\n    width: spacing(7),\n    [breakpoints.up('sm')]: {\n      width: spacing(9),\n    },\n  },\n  appBarSpacer: mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: spacing(2),\n    overflow: 'auto',\n  },\n});\n\ninterface Props extends WithStyles<typeof styles> {\n}\n\nclass App extends React.Component<Props> {\n  state = {\n    open: true,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root} >\n        <BrowserRouter\n          basename={\"self-introduction-react\"}\n        >\n          <CssBaseline />\n          <AppBar className={classNames(classes.appBar, this.state.open && classes.appBarShift)} >\n            <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Open drawer\"\n                onClick={this.handleDrawerOpen}\n                className={classNames(\n                  classes.menuButton,\n                  this.state.open && classes.menuButtonHidden,\n                )}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography\n                component=\"h1\"\n                variant=\"h5\"\n                color=\"inherit\"\n                noWrap\n                className={classes.title}\n              >\n                Self Introduction\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            variant=\"permanent\"\n            classes={{\n              paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\n            }}\n            open={this.state.open}\n          >\n            <div className={classes.toolbarIcon}>\n              <IconButton onClick={this.handleDrawerClose}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <Divider />\n            <List>\n              <Link to=\"/home\">\n                <ListItem button>\n                  <ListItemIcon>\n                    <DashboardIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Profile\" />\n                </ListItem>\n              </Link>\n              <Link to=\"/work\">\n                <ListItem button>\n                  <ListItemIcon>\n                    <ShoppingCartIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Work\" />\n                </ListItem>\n              </Link>\n            </List>\n          </Drawer>\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <div>\n              <Route path='/' exact component={DemoComponent} />\n              <Route path='/home' component={DemoComponent} />\n              <Route path='/work' component={WorkComponent} />\n            </div>\n          </main>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default withRoot(withStyles(styles)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}