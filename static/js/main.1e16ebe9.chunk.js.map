{"version":3,"sources":["withRoot.tsx","components/DemoComponent.tsx","components/TestComponent.tsx","App.tsx","serviceWorker.ts","index.tsx","logo.svg"],"names":["theme","createMuiTheme","palette","primary","lightblue","secondary","blueGrey","typography","useNextVariants","withRoot","Component","props","react","core_styles","CssBaseline_default","a","DemoComponent","classes","this","react_default","createElement","className","root","header","src","logo","alt","href","target","rel","React","withStyles","createStyles","textAlign","backgroundColor","main","boxShadow","shadows","padding","spacing","unit","counter","fontSize","TestComponent","CounterButton","_useState","useState","_useState2","Object","slicedToArray","count","setCount","Button_default","variant","color","onClick","App","state","open","handleDrawerOpen","_this","setState","handleDrawerClose","react_router_dom","AppBar_default","position","classNames","appBar","appBarShift","Toolbar_default","disableGutters","toolbar","IconButton_default","aria-label","menuButton","menuButtonHidden","Menu_default","Typography_default","component","noWrap","title","Drawer_default","paper","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","Divider_default","List_default","to","ListItem_default","button","ListItemIcon_default","Dashboard_default","ListItemText_default","ShoppingCart_default","content","appBarSpacer","react_router","path","exact","display","paddingRight","objectSpread","alignItems","justifyContent","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","concat","enteringScreen","marginRight","flexGrow","whiteSpace","defineProperty","overflowX","breakpoints","up","height","overflow","chartContainer","tableContainer","h5","marginBottom","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.1e16ebe9.chunk.js","sourcesContent":["import * as React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport lightblue from '@material-ui/core/colors/lightBlue';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst theme = createMuiTheme({\n  // Theme Colors\n  palette: {\n    primary: lightblue,\n    secondary: blueGrey,\n  },\n  // typography\n  typography: {\n    useNextVariants: true\n  }\n});\n\nfunction withRoot<P>(Component: React.ComponentType<P>) {\n  function WithRoot(props: P) {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <Component {...props} />\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;","import React from \"react\";\n\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\nimport withStyles, { WithStyles, StyleRules } from \"@material-ui/core/styles/withStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\n\nimport logo from '../logo.svg';\n\nconst styles = (theme: Theme): StyleRules =>\n    createStyles({\n        root: {\n            textAlign: \"center\"\n        },\n        header: {\n            backgroundColor: theme.palette.primary.main,\n            boxShadow: theme.shadows[2],\n            padding: theme.spacing.unit * 2,\n        },\n        counter: {\n            fontSize: 60\n        },\n    });\n\ninterface DemoProps extends WithStyles<typeof styles> {\n}\n\nclass DemoComponent extends React.Component<DemoProps> {\n\n    public render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <div className={classes.header}>\n                    <p>\n                        My Demo TS Component\n                    </p>\n                </div>\n                <div>\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <p>\n                        Edit <code>src/App.tsx</code> and save to reload.\n                    </p>\n                    <a\n                        className=\"App-link\"\n                        href=\"https://reactjs.org\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        Learn React\n            </a>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(DemoComponent);\n","import React, { useState } from \"react\";\n\nimport Button from '@material-ui/core/Button';\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\nimport withStyles, { WithStyles, StyleRules } from \"@material-ui/core/styles/withStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    root: {\n        textAlign: \"center\"\n    },\n    header: {\n        backgroundColor: theme.palette.primary.main,\n        boxShadow: theme.shadows[2],\n        padding: theme.spacing.unit * 2,\n    },\n    counter: {\n        fontSize: 60\n    },\n});\n\ninterface TestProps extends WithStyles<typeof styles> {\n}\n\nclass TestComponent extends React.Component<TestProps> {\n\n    public render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <div className={classes.header}>\n                    {\"My Test TS Component\"}\n                </div>\n                <div>\n                    <CounterButton />\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction CounterButton() {\n    const [count, setCount] = useState(0);\n\n    return (\n        <div>\n            <p>You clicked {count} times</p>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => setCount(count + 1)}>Click me</Button>\n        </div>\n    );\n}\n\nexport default withStyles(styles)(TestComponent);\n","import React from 'react';\nimport './App.css';\n\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\n\nimport classNames from \"classnames\"\n\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\nimport withStyles, { WithStyles, StyleRules } from \"@material-ui/core/styles/withStyles\";\nimport withRoot from './withRoot';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\n\nimport DemoComponent from './components/DemoComponent'\nimport TestComponent from './components/TestComponent'\n\nconst drawerWidth = 240;\n\nconst styles = (theme: Theme): StyleRules => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9,\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  chartContainer: {\n    marginLeft: -22,\n  },\n  tableContainer: {\n    height: 320,\n  },\n  h5: {\n    marginBottom: theme.spacing.unit * 2,\n  },\n});\n\ninterface Props extends WithStyles<typeof styles> {\n}\n\nclass App extends React.Component<Props> {\n  state = {\n    open: true,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root} >\n        <BrowserRouter>\n          <CssBaseline />\n          <AppBar\n            position=\"absolute\"\n            className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\n          >\n            <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Open drawer\"\n                onClick={this.handleDrawerOpen}\n                className={classNames(\n                  classes.menuButton,\n                  this.state.open && classes.menuButtonHidden,\n                )}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography\n                component=\"h1\"\n                variant=\"h6\"\n                color=\"inherit\"\n                noWrap\n                className={classes.title}\n              >\n                Self Introduction\n                        </Typography>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            variant=\"permanent\"\n            classes={{\n              paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\n            }}\n            open={this.state.open}\n          >\n            <div className={classes.toolbarIcon}>\n              <IconButton onClick={this.handleDrawerClose}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <Divider />\n            <List>\n              <Link to=\"/home\">\n                <ListItem button>\n                  <ListItemIcon>\n                    <DashboardIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Home\" />\n                </ListItem>\n              </Link>\n              <Link to=\"/test\">\n                <ListItem button>\n                  <ListItemIcon>\n                    <ShoppingCartIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Test\" />\n                </ListItem>\n              </Link>\n            </List>\n          </Drawer>\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <div>\n            <Route path='/' exact component={DemoComponent} />\n              <Route path='/home' component={DemoComponent} />\n              <Route path='/test' component={TestComponent} />\n            </div>\n          </main>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default withRoot(withStyles(styles)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}